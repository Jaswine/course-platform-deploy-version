# Generated by Django 4.2.5 on 2023-11-18 04:49

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CodeTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('text', models.TextField()),
                ('users_who_completed_code', models.ManyToManyField(blank=True, related_name='users_who_completed_code', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('image', models.ImageField(blank=True, upload_to='courses/<django.db.models.fields.CharField>')),
                ('about', ckeditor.fields.RichTextField(blank=True, max_length=2000)),
                ('level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Expert', 'Expert')], max_length=13)),
                ('public', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('type', models.CharField(choices=[('No answer choice', 'No answer choice'), ('With a choice of one answer', 'With a choice of one answer')], max_length=100)),
                ('correct_answer', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionAnswersToChoose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, choices=[('text', 'text'), ('video', 'video'), ('project', 'project'), ('code', 'code')], max_length=10)),
                ('points', models.IntegerField(default=0)),
                ('video', models.FileField(blank=True, upload_to='courses/tasks/videos')),
                ('text', ckeditor.fields.RichTextField(blank=True, default='')),
                ('public', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('code_tasks', models.ManyToManyField(blank=True, default=[], to='course.codetask')),
                ('questions', models.ManyToManyField(blank=True, default=[], to='course.question')),
            ],
        ),
        migrations.CreateModel(
            name='TaskOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.task')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('public', models.BooleanField(default=False)),
                ('tasks', models.ManyToManyField(blank=True, default=[], related_name='tasks', through='course.TaskOrder', to='course.task')),
            ],
        ),
        migrations.CreateModel(
            name='TitleOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.course')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.title')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TaskURLField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_on_repo', models.URLField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='taskorder',
            name='title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.title'),
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, max_length=1000)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='urls',
            field=models.ManyToManyField(blank=True, default=[], to='course.taskurlfield'),
        ),
        migrations.AddField(
            model_name='task',
            name='users_who_completed',
            field=models.ManyToManyField(blank=True, related_name='users_who_completed_task', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='question',
            name='answers_to_choose',
            field=models.ManyToManyField(blank=True, to='course.questionanswerstochoose'),
        ),
        migrations.AddField(
            model_name='question',
            name='users_who_completed_question',
            field=models.ManyToManyField(blank=True, related_name='users_who_completed_question', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, max_length=1000)),
                ('stars', models.IntegerField(blank=True, default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='course_titles',
            field=models.ManyToManyField(blank=True, default=[], related_name='course_titles', through='course.TitleOrder', to='course.title'),
        ),
        migrations.AddField(
            model_name='course',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='likes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='tags',
            field=models.ManyToManyField(blank=True, to='course.tag'),
        ),
        migrations.AddField(
            model_name='course',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='users_who_registered',
            field=models.ManyToManyField(blank=True, related_name='users_who_registered', to=settings.AUTH_USER_MODEL),
        ),
    ]
